This branch of the code currently will when started read that there is no genesis block present and will automatically
start trying to mine the genesis block.

You can watch the progress in the file debug.log in the directory as the blockchain.

Once the genesis block is mined it will beprinted out with its nonce and hash value in the debug.log file and the ppcoin 
client will close

### I have not tested beyond here myself yet ####

Once the genesis block is mined you need to input the values for the nonce and genesis block hash and uncomment the asserts 
(see the commit here https://github.com/Peershares/Peershares/commit/e65521d3c615d95dab6c41cf1da756802c7e54c1 )

now when you run the code it should be set ready for you to make the initial seed nodes...
For this you will need two different ip's 

start each ppcoind -connect=ip.of.other.server

you will need a ppcoin.conf file as well if i remember rightly...

I have a bash file I wrote for another project which just needs a bit of editing...


#!/bin/bash

#################################################################################
### Run this code on two servers to create all the directories and conf files ###
#################################################################################

#################################################################
### Pass in CoinName, rpcPort and IP of server to connect to ####
### NOTE: NOT the IP of the server u are on but the other one ###
#################################################################

coinName=$1
rpcport=$2
IP=$3

echo "$coinName"
echo "$rpcport"
echo "$IP"

cd /root/Coins/
git clone http://github.com/Peershares/$coinName.git

##################################################################
#### Make the coinName.conf file in the ~/.coinName directory ####
##################################################################

mkdir ~/.$coinName

echo -e 'username=u\nrpcpassword=x\nrpcport='"$rpcport"'\nserver=1\nlisten=1' >> ~/.$coinName/$coinName.conf

cd /root/Coins/$coinName/src
./"$coinName"d --daemon -connect="$IP"
